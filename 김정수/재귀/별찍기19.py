'''
예제를 보고 규칙을 유추한 뒤에 별을 찍어 보세요.
2
*****
*   *
* * *
*   *
*****

3
*********
*       *
* ***** *
* *   * *
* * * * *
* *   * *
* ***** *
*       *
*********
'''

n = int(input())
m = 4*n-3

# m*m만큼의 빈 공백 리스트 만들기
a = [[' ']*m for _ in range(m)]


# 여기서 i는 겹을 의미
def stars(i):
    if i == m+1:
        return
    # 현재 겹(i)에 대한 윗줄과 아랫줄 별 채우기
    for j in range(i,m-i):
        a[i][j],a[m-i-1][j] = '*','*'
    # 현재 겹(i)에 대한 왼쪽과 오른쪽 열에 별 채우기
    for j in range(i,m-i):
        a[j][i], a[j][m-i-1] = '*','*'
    stars(i+2)


stars(0)

for i in a:
    print(i, sep='')


'''
재귀함수로 도저히 못풀겠어서 힌트라도 얻을겸 구글링을 한 결과
미친 풀이를 발견했습니다...

이 문제풀이의 핵심은 아마 별을 채우는 동작을 겹에 따라 채우는 방식입니다.
input이 2이면

*****
*   *
* * *
*   *
*****

이렇게 출력되는데, 겹겹이 쌓인 주머니라고 생각하면
가장 바깥쪽이 0번째 겹, 그 다음 공백으로 이루어진 겹이 1번째 겹,
맨 마지막 별 하나만 있는 겹이 입력값인 2번째 겹이라고 생각하는 것입니다.

그 다음 첫번째 for문은 현재 겹(i)에 대한 윗줄과 아랫줄 별을 채우고,
두번째 for문은 현재 겹(i)에 대한 왼쪽과 오른쪽 열에 별을 채우면 완성됩니다.

물론 홀수번 겹은 공백이라 재귀 함수를 +2씩 증가시켜줍니다.
'''