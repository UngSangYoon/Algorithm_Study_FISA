"""
문제
n가지 종류의 동전이 있다. 각각의 동전이 나타내는 가치는 다르다. 이 동전을 적당히 사용해서, 그 가치의 합이 k원이 되도록 하고 싶다. 그 경우의 수를 구하시오. 각각의 동전은 몇 개라도 사용할 수 있다.

사용한 동전의 구성이 같은데, 순서만 다른 것은 같은 경우이다.

입력
첫째 줄에 n, k가 주어진다. (1 ≤ n ≤ 100, 1 ≤ k ≤ 10,000) 다음 n개의 줄에는 각각의 동전의 가치가 주어진다. 동전의 가치는 100,000보다 작거나 같은 자연수이다.

출력
첫째 줄에 경우의 수를 출력한다. 경우의 수는 231보다 작다.

예제 입력 1
3 10
1
2
5
예제 출력 1
10
"""

"""
잘못된 방법 -> dp[0]을 1로 안놓고 풀었음
"""

# 입력 받기
n, k = map(int, input().split())  # 동전 개수, 목표 금액
coins = [int(input()) for _ in range(n)]  # 동전 가치 리스트

# DP 테이블 초기화
dp = [0] * (k + 1)  # dp[i] -> i원을 만들 수 있는 경우의 수를 저장하는 리스트
dp[0] = 1  # 0원을 만드는 방법은 1가지 (아무 동전도 사용하지 않는 경우)


# 동전별로 DP 갱신
for coin in coins: # coins 리스트 안에 각각 한개의 동전에서
    for j in range(coin, k + 1):
        # dp[1] = dp[1] + dp[0] -> 1
        dp[j] = dp[j] + dp[j - coin] # j원을 만들기 위한
# 결과 출력
print(dp[k])